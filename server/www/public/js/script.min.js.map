{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","server/www/src/js/classes/MobilePresentation.js","server/www/src/js/script.js","shared/js/Constants.js","shared/js/classes/slides/ContentBase.js","shared/js/classes/MobileServerBridge.js","shared/js/classes/Presentation.js","shared/js/classes/SlideBridge.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClzvNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"script.min.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = (function(){\n\n\tvar Constants = require('Constants');\n\n\tvar PresentationBase = require('shared/Presentation');\n\tvar MobileServerBridge = require('shared/MobileServerBridge');\n\t\n\tfunction MobilePresentation(data, role) {\n\t\tthis.$overlay = $('#overlay');\n\t\tPresentationBase.call(this, data, role);\n\t}\n\n\tMobilePresentation.prototype = Object.create(PresentationBase.prototype);\n\n\tMobilePresentation.prototype.createMobileServerBridge = function() {\n\t\treturn new MobileServerBridge(this, '');\n\t};\n\n\tMobilePresentation.prototype.handleMobileServerMessage = function(message) {\n\t\tif(!message.content) {\n\t\t\treturn;\n\t\t}\n\t\tif(message.content.action == 'setCurrentSlideIndex') {\n\t\t\tthis.setCurrentSlideIndex(message.content.currentSlideIndex);\n\t\t} else if(message.content.action == Constants.BLINK) {\n\t\t\tthis.blink(message.content.text, message.content.backgroundColor);\n\t\t}\n\t};\n\n\tMobilePresentation.prototype.setCurrentSlideIndex = function(index) {\n\t\tPresentationBase.prototype.setCurrentSlideIndex.call(this, index);\n\t\tthis.$overlay.removeClass('active');\n\t\tif(this.blinkInterval) {\n\t\t\tclearInterval(this.blinkInterval);\n\t\t}\n\t};\n\n\tMobilePresentation.prototype.blink = function(text, backgroundColor) {\n\t\t//overlay important, blinking text\n\t\tthis.$overlay.find('.content').html(text);\n\t\tthis.$overlay.addClass('active');\n\t\tif(this.blinkInterval) {\n\t\t\tclearInterval(this.blinkInterval);\n\t\t}\n\t\tthis.blinkInterval = setInterval(this.blinkToggle.bind(this, backgroundColor), 500);\n\t};\n\n\tMobilePresentation.prototype.blinkToggle = function(backgroundColor) {\n\t\tthis.$overlay.toggleClass('blink-on');\n\t\tif(this.$overlay.hasClass('blink-on')) {\n\t\t\tthis.$overlay.css('background-color', backgroundColor);\n\t\t} else {\n\t\t\tthis.$overlay.css('background-color', false);\n\t\t}\n\t};\n\n\treturn MobilePresentation;\n\n})();","(function(){\n\n\tvar MobilePresentation = require('./classes/MobilePresentation');\n\n\tfunction init(){\n\t\tif($('#presentation').length > 0) {\n\t\t\t//load the data.json\n\t\t\t$.get('/data.json').done(function(result){\n\t\t\t\tnew MobilePresentation(result, 'mobile');\n\t\t\t});\n\t\t}\n\t}\n\n\tinit();\n})();","module.exports = (function(){\n\n\tvar Constants = {\n\t\tGO_TO_PREVIOUS_SLIDE : 'goToPreviousSlide',\n\t\tGO_TO_NEXT_SLIDE : 'goToNextSlide',\n\t\tSET_SLIDES : 'setSlides',\n\t\tSET_CURRENT_SLIDE_INDEX : 'setCurrentSlideIndex',\n\n\t\tMESSAGE : 'message',\n\t\tSOCKET_SEND : 'socketSend',\n\t\tSOCKET_RECEIVE : 'socketReceive',\n\t\tJOIN_SLIDE_ROOM : 'joinSlideRoom',\n\t\tLEAVE_SLIDE_ROOM : 'leaveSlideRoom',\n\n\t\tROLE_PRESENTATION : 'presentation',\n\t\tROLE_MOBILE : 'mobile',\n\n\t\tSTATE_ACTIVE : 'active',\n\t\tSTATE_INACTIVE : 'inactive',\n\n\t\tSET_SUBSTATE : 'setSubstate',\n\n\t\tCHILD_APP_SAVE_CODE : 'childAppSaveCode',\n\t\tCHILD_APP_RUN_CODE : 'childAppRunCode',\n\t\tCHILD_APP_STDOUT_DATA : 'childAppStdoutData',\n\t\tCHILD_APP_STDERR_DATA : 'childAppStderrData',\n\n\t\tOPEN_COMMAND_LINE: 'openCommandLine',\n\t\tOPEN_CAMERA: 'openCamera'\n\t};\n\n\treturn Constants;\n\n})();\n","module.exports = (function(){\n\n\tvar Constants = require('Constants');\n\n\tfunction ContentBase(name) {\n\t\tthis.name = name;\n\t\tthis.fps = 60;\n\t\tthis._animationFrameId = false;\n\t\tthis._currentTime = 0;\n\t\tthis._delta = 0;\n\t\tthis._interval = false;\n\t\tthis._lastTime = new Date().getTime();\n\t\tthis.currentFrame = 0;\n\n\t\tthis.startListeningForMessages();\n\n\t\tthis.__drawLoop = this._drawLoop.bind(this);\n\t\tthis._interval = 1000 / this.fps;\n\t}\n\n\tContentBase.prototype.startListeningForMessages = function() {\n\t\tthis._receiveMessage = this.receiveMessage.bind(this);\n\t\twindow.addEventListener(\"message\", this._receiveMessage, false);\n\t};\n\n\tContentBase.prototype.stopListeningForMessages = function() {\n\t\twindow.removeEventListener('message', this._receiveMessage);\n\t};\n\n\tContentBase.prototype.receiveMessage = function(event) {\n\t\tif(!event.data) {\n\t\t\treturn;\n\t\t}\n\t\tswitch(event.data.action) {\n\t\t\tcase 'setState':\n\t\t\t\tthis.setState(event.data.state);\n\t\t\t\tbreak;\n\t\t\tcase 'destroy':\n\t\t\t\tthis.destroy();\n\t\t\t\tbreak;\n\t\t\tcase Constants.SOCKET_RECEIVE:\n\t\t\t\tthis.receiveSocketMessage(event.data.message);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.handleMessage(event.data);\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tContentBase.prototype.destroy = function() {\n\t\tconsole.log('destroy called', this.name);\n\t\tthis.stopListeningForMessages();\n\t\twindow.cancelAnimationFrame(this._animationFrameId);\n\t};\n\n\tContentBase.prototype.postMessage = function(data) {\n\t\tparent.postMessage(data, \"*\");\n\t};\n\n\tContentBase.prototype.handleMessage = function(data) {\n\t};\n\n\tContentBase.prototype.postSocketMessage = function(message) {\n\t\tthis.postMessage({\n\t\t\taction: Constants.SOCKET_SEND,\n\t\t\tmessage: message\n\t\t});\n\t};\n\n\tContentBase.prototype.receiveSocketMessage = function(message) {\n\t\t//console.log('ContentBase.prototype.receiveSocketMessage ' + this.name, message);\n\t};\n\n\tContentBase.prototype.setState = function(state) {\n\t\tif(state !== this.state) {\n\t\t\tthis.state = state;\n\t\t\tthis.onStateChanged();\n\t\t\tif(this.state === Constants.STATE_ACTIVE) {\n\t\t\t\tthis.currentFrame = 0;\n\t\t\t\tthis._drawLoop();\n\t\t\t} else {\n\t\t\t\twindow.cancelAnimationFrame(this._animationFrameId);\n\t\t\t}\n\t\t}\n\t};\n\n\tContentBase.prototype.onStateChanged = function() {\n\t};\n\n\tContentBase.prototype._drawLoop = function() {\n\t\tthis._animationFrameId = window.requestAnimationFrame(this.__drawLoop);\n\t\tthis._currentTime = (new Date()).getTime();\n\t    this._delta = (this._currentTime - this._lastTime);\n\t    if(this._delta > this._interval) {\n\t    \tthis.currentFrame++;\n\t    \tthis.drawLoop(this._delta);\n\t    \tthis._lastTime = this._currentTime - (this._delta % this._interval);\n\t    }\n\t};\n\n\tContentBase.prototype.drawLoop = function(delta) {\n\t};\n\n\treturn ContentBase;\n\n})();\n","module.exports = (function(){\n\n\tvar Constants = require('Constants');\n\n\tfunction MobileServerBridge(presentation, url) {\n\t\tthis.presentation = presentation;\n\t\tthis.url = url;\n\t\tthis.connect();\n\t}\n\n\tMobileServerBridge.prototype.connect = function() {\n\t\tconsole.log('MobileServerBridge.connect');\n\t\t$.post(this.url + '/login', this.getLoginCredentials()).done(this.loginHandler.bind(this))\n\t\t.fail((function() {\n\t\t\t//retry after one second\n\t\t\tsetTimeout((function(){\n\t\t\t\tthis.connect();\n\t\t\t}).bind(this), 1000);\n\t  }).bind(this));\n\t};\n\n\tMobileServerBridge.prototype.getLoginCredentials = function() {\n\t\treturn {};\n\t};\n\n\tMobileServerBridge.prototype.loginHandler = function(result) {\n\t\tthis.token = result.token;\n\t\tthis.socket = io(this.url, {\n\t\t\tquery: 'token=' + this.token,\n\t\t\treconnection: false,\n\t\t\tforceNew: true\n\t\t});\n\t\tthis.socket.on('connect', this.socketConnectHandler.bind(this));\n\t\tthis.socket.on('disconnect', this.socketDisconnectHandler.bind(this));\n\t\tthis.socket.on('message', this.socketMessageHandler.bind(this));\n\t};\n\n\tMobileServerBridge.prototype.socketConnectHandler = function() {\n\t\tconsole.log('MobileServerBridge.socketConnectHandler');\n\t\tthis.presentation.mobileServerBridgeConnected();\n\t};\n\n\tMobileServerBridge.prototype.socketDisconnectHandler = function() {\n\t\tthis.connect();\n\t};\n\n\tMobileServerBridge.prototype.tryToSend = function() {\n\t\tif(this.socket) {\n\t\t\tthis.socket.emit.apply(this.socket, arguments);\n\t\t}\n\t};\n\n\tMobileServerBridge.prototype.socketMessageHandler = function(message) {\n\t\tthis.presentation.mobileServerMessageHandler(message);\n\t};\n\n\treturn MobileServerBridge;\n})();","module.exports = (function(){\n\n\tvar Constants = require('Constants');\n\tvar SlideBridge = require('./SlideBridge');\n\n\t/*\n\t * data: json object with slides array property\n\t * role: mobile or presentation\n\t */\n\tfunction Presentation(data, role) {\n\t\tthis.data = data;\n\t\tthis.role = role;\n\t\tthis.currentSlideIndex = -1;\n\t\tthis.slideHolders = [];\n\t\tthis.numSlideHolders = 3;\n\t\tthis.slideBridges = [];\n\t\tthis.slideBridgesBySlideName = {};\n\n\t\tthis.createSlideHolders();\n\t\tthis.createSlideBridges(this.data);\n\n\t\tthis.mobileServerBridge = this.createMobileServerBridge();\n\t\tthis.startListeningForMessages();\n\n\t\tthis.setCurrentSlideIndex(0);\n\t}\n\n\tPresentation.prototype.startListeningForMessages = function() {\n\t\twindow.addEventListener(\"message\", this.slideMessageHandler.bind(this), false);\n\t};\n\n\tPresentation.prototype.createSlideHolders = function() {\n\t\tfor(var i = 0; i < this.numSlideHolders; i++) {\n\t\t\tvar $slideHolder = $('<iframe class=\"slide-frame\" />');\n\t\t\tthis.slideHolders.push($slideHolder);\n\t\t\t$('#presentation').append($slideHolder);\n\t\t}\n\t};\n\n\tPresentation.prototype.createSlideBridges = function(data) {\n\t\tvar that = this;\n\t\tvar numSlides = data.slides.length;\n\t\tfor(var i = 0; i < numSlides; i++) {\n\t\t\tvar slideBridge = this.createSlideBridge(data.slides[i]);\n\t\t\tthis.slideBridges.push(slideBridge);\n\t\t\tthis.slideBridgesBySlideName[slideBridge.name] = slideBridge;\n\t\t}\n\t};\n\n\tPresentation.prototype.createSlideBridge = function(slide) {\n\t\treturn new SlideBridge(slide);\n\t};\n\n\tPresentation.prototype.slideMessageHandler = function(event) {\n\t\tif(!event.data) {\n\t\t\treturn;\n\t\t}\n\t\tswitch(event.data.action) {\n\t\t\tcase Constants.SOCKET_SEND:\n\t\t\t\tif(this.mobileServerBridge) {\n\t\t\t\t\tthis.mobileServerBridge.tryToSend(Constants.MESSAGE, event.data.message);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tPresentation.prototype.mobileServerBridgeConnected = function() {\n\t\t//join the rooms of the slideHolders\n\t\tfor(var i = 0; i < this.numSlideHolders; i++) {\n\t\t\tthis.mobileServerBridge.tryToSend(Constants.JOIN_SLIDE_ROOM, $(this.slideHolders[i]).attr('data-name'));\n\t\t}\n\t};\n\n\tPresentation.prototype.mobileServerMessageHandler = function(message) {\n\t\tif(message.target.slide) {\n\t\t\t//slide has to handle the message\n\t\t\tvar slideBridge = this.getSlideBridgeByName(message.target.slide);\n\t\t\tif(slideBridge) {\n\t\t\t\tslideBridge.tryToPostMessage({\n\t\t\t\t\taction: Constants.SOCKET_RECEIVE,\n\t\t\t\t\tmessage: message\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\t//presentation has to handle the message\n\t\t\tthis.handleMobileServerMessage(message);\n\t\t}\n\t};\n\n\tPresentation.prototype.handleMobileServerMessage = function(message) {\n\t\tconsole.log('[shared/Presentation] handleMobileServerMessage', message);\n\t};\n\n\tPresentation.prototype.getSlideBridgeByIndex = function(index) {\n\t\tif(index >= 0 && index < this.slideBridges.length) {\n\t\t\treturn this.slideBridges[index];\n\t\t}\n\t\treturn false;\n\t};\n\n\tPresentation.prototype.getSlideBridgeByName = function(slideName) {\n\t\treturn this.slideBridgesBySlideName[slideName];\n\t};\n\n\tPresentation.prototype.getSlideHolderForSlide = function(slide, slidesNotToClear) {\n\t\tif(slide) {\n\t\t\tvar $slideHolder = $('.slide-frame[data-name=\"' + slide.name + '\"]');\n\t\t\tif($slideHolder.length > 0) {\n\t\t\t\treturn $slideHolder[0];\n\t\t\t}\n\t\t\t//get a free slideHolder\n\t\t\tvar slideNamesNotToClear = [];\n\t\t\t$(slidesNotToClear).each(function(index, obj){\n\t\t\t\tslideNamesNotToClear.push(obj.name);\n\t\t\t});\n\t\t\tvar $slideHolders = $('.slide-frame');\n\t\t\tfor (var i = $slideHolders.length - 1; i >= 0; i--) {\n\t\t\t\t$slideHolder = $($slideHolders[i]);\n\t\t\t\tvar name = $slideHolder.attr('data-name');\n\t\t\t\tif(!name || slideNamesNotToClear.indexOf(name) === -1) {\n\t\t\t\t\treturn $slideHolder[0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\tPresentation.prototype.goToPreviousSlide = function() {\n\t\tthis.setCurrentSlideIndex(this.currentSlideIndex - 1);\n\t};\n\n\tPresentation.prototype.goToNextSlide = function() {\n\t\tthis.setCurrentSlideIndex(this.currentSlideIndex + 1);\n\t};\n\n\tPresentation.prototype.setCurrentSlideIndex = function(value) {\n\t\tvalue = Math.max(0, Math.min(value, this.slideBridges.length - 1));\n\t\tif(value !== this.currentSlideIndex) {\n\t\t\tthis.currentSlideIndex = value;\n\n\t\t\tvar currentSlideBridge = this.getSlideBridgeByIndex(this.currentSlideIndex);\n\t\t\tvar previousSlideBridge = this.getSlideBridgeByIndex(this.currentSlideIndex - 1);\n\t\t\tvar nextSlideBridge = this.getSlideBridgeByIndex(this.currentSlideIndex + 1);\n\n\t\t\tvar currentSlideHolder = this.getSlideHolderForSlide(currentSlideBridge, [previousSlideBridge, nextSlideBridge]);\n\t\t\tthis.setupSlideHolder(currentSlideHolder, currentSlideBridge, Constants.STATE_ACTIVE, 0);\n\n\t\t\tvar previousSlideHolder = this.getSlideHolderForSlide(previousSlideBridge, [currentSlideBridge, nextSlideBridge]);\n\t\t\tthis.setupSlideHolder(previousSlideHolder, previousSlideBridge, Constants.STATE_INACTIVE, '-100%');\n\n\t\t\tvar nextSlideHolder = this.getSlideHolderForSlide(nextSlideBridge, [previousSlideBridge, currentSlideBridge]);\n\t\t\tthis.setupSlideHolder(nextSlideHolder, nextSlideBridge, Constants.STATE_INACTIVE, '100%');\n\n\t\t\t//all other slideHolder bridges should be unlinked from their slideHolder\n\t\t\tthis.slideBridges.forEach(function(slideBridge){\n\t\t\t\tif(slideBridge === currentSlideBridge) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(slideBridge === previousSlideBridge) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(slideBridge === nextSlideBridge) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tslideBridge.slideHolder = null;\n\t\t\t});\n\n\t\t\tbean.fire(this, Constants.SET_CURRENT_SLIDE_INDEX, [this.currentSlideIndex]);\n\t\t}\n\t};\n\n\tPresentation.prototype.setupSlideHolder = function(slideHolder, slideBridge, state, left) {\n\t\tif(slideHolder) {\n\t\t\tvar src = \"slides/\" + slideBridge.name + '.html';\n\t\t\tif(slideBridge.data[this.role] && slideBridge.data[this.role].url) {\n\t\t\t\tsrc = slideBridge.data[this.role].url;\n\t\t\t}\n\t\t\tsrc = this.processSlideSrc(src);\n\t\t\tif(slideBridge.isAlreadyCorrectlyAttached(slideHolder, src)) {\n\t\t\t\t//console.log(slideBridge.name + ' already attached');\n\t\t\t} else {\n\t\t\t\tthis.attachToSlideHolder(slideHolder, slideBridge, src);\n\t\t\t}\n\t\t\tslideBridge.setState(state);\n\t\t\t$(slideHolder).css('left', left);\n\t\t}\n\t};\n\n\tPresentation.prototype.attachToSlideHolder = function(slideHolder, slideBridge, src) {\n\t\t//leave previous channel of this slideHolder\n\t\tif(this.mobileServerBridge) {\n\t\t\tthis.mobileServerBridge.tryToSend(Constants.LEAVE_SLIDE_ROOM, $(slideHolder).attr('data-name'));\n\t\t}\n\t\t//add the join as a callback for the onload event\n\t\tslideBridge.attachToSlideHolder(slideHolder, src, this.slideLoaded.bind(this, slideHolder, slideBridge, src));\n\t};\n\n\tPresentation.prototype.slideLoaded = function(slideHolder, slideBridge) {\n\t\t//join new channel\n\t\tif(this.mobileServerBridge) {\n\t\t\tthis.mobileServerBridge.tryToSend(Constants.JOIN_SLIDE_ROOM, $(slideHolder).attr('data-name'));\n\t\t}\n\t};\n\n\tPresentation.prototype.processSlideSrc = function(src) {\n\t\treturn src;\n\t};\n\n\tPresentation.prototype.createMobileServerBridge = function() {\n\t\t//to implement in extending classes\n\t};\n\n\treturn Presentation;\n\n})();\n","module.exports = (function(){\n\tfunction getIframeWindow(iframe_object) {\n\t\tvar doc;\n\n\t\tif (iframe_object.contentWindow) {\n\t\t\treturn iframe_object.contentWindow;\n\t\t}\n\n\t\tif (iframe_object.window) {\n\t\t\treturn iframe_object.window;\n\t\t}\n\n\t\tif (!doc && iframe_object.contentDocument) {\n\t\t\tdoc = iframe_object.contentDocument;\n\t\t}\n\n\t\tif (!doc && iframe_object.document) {\n\t\t\tdoc = iframe_object.document;\n\t\t}\n\n\t\tif (doc && doc.defaultView) {\n\t\t return doc.defaultView;\n\t\t}\n\n\t\tif (doc && doc.parentWindow) {\n\t\t\treturn doc.parentWindow;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tfunction SlideBridge(data) {\n\t\tthis.data = data;\n\t\tthis.name = this.data.name;\n\t}\n\n\tSlideBridge.prototype.isAlreadyCorrectlyAttached = function(slideHolder, src) {\n\t\treturn (this.slideHolder === slideHolder && $(slideHolder).attr('data-name') === this.name && $(slideHolder).attr('data-src') === src);\n\t};\n\n\tSlideBridge.prototype.attachToSlideHolder = function(slideHolder, src, cb) {\n\t\t//notify the content it is being cleared\n\t\tthis.tryToPostMessage({action: 'destroy'});\n\t\tthis.slideHolder = slideHolder;\n\t\t$(slideHolder).off('load');\n\t\t$(slideHolder).attr('data-name', this.name);\n\t\t$(slideHolder).addClass('loading');\n\t\tif(src !== $(slideHolder).attr('data-src')) {\n\t\t\t$(slideHolder).on('load', (function(event){\n\t\t\t\t$(slideHolder).removeClass('loading');\n\t\t\t\tthis.tryToPostMessage({\n\t\t\t\t\taction: 'setState',\n\t\t\t\t\tstate: this.state\n\t\t\t\t});\n\t\t\t\tcb();\n\t\t\t}).bind(this));\n\t\t\t$(slideHolder).attr('data-src', src);\n\t\t\t$(slideHolder).attr('src', src);\n\t\t}\n\t};\n\n\tSlideBridge.prototype.setState = function(state) {\n\t\tthis.state = state;\n\t\tthis.tryToPostMessage({\n\t\t\taction: 'setState',\n\t\t\tstate: this.state\n\t\t});\n\t};\n\n\tSlideBridge.prototype.tryToPostMessage = function(message) {\n\t\tif(!this.slideHolder) {\n\t\t\treturn;\n\t\t}\n\t\tvar w = getIframeWindow(this.slideHolder);\n\t\tif(w) {\n\t\t\tw.postMessage(message, \"*\");\n\t\t}\n\t};\n\n\treturn SlideBridge;\n})();\n"]}